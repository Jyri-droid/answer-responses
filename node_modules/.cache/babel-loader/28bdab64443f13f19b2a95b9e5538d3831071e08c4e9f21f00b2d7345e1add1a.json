{"ast":null,"code":"var _jsxFileName = \"/Users/jyrikonttinen/Documents/github/answer-responses/src/TaskBox.tsx\";\nimport React from 'react';\nimport Select from './Select.tsx';\nimport Result from './Result.tsx';\nimport texts from \"./texts.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\n// Create options for select\nconst options = [];\ntexts.forEach(object => !options.includes(object.answer) && options.push(object.answer));\nconst TaskBox = props => {\n  const handleChange = event => {\n    const value = event.target.value;\n    const index = Number(event.target.id);\n    const copy = props.answers;\n    copy.splice(index, 1, value);\n    console.log(copy);\n    props.setAnswers(copy);\n  };\n  const isEmpty = false;\n  const isCorrect = false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-box-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      id: props.index,\n      options: options,\n      onChange: handleChange,\n      defaultValue: \"default\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Result, {\n      isEmpty: isEmpty,\n      isCorrect: isCorrect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n_c = TaskBox;\nexport default TaskBox;\nvar _c;\n$RefreshReg$(_c, \"TaskBox\");","map":{"version":3,"names":["React","Select","Result","texts","jsxDEV","_jsxDEV","options","forEach","object","includes","answer","push","TaskBox","props","handleChange","event","value","target","index","Number","id","copy","answers","splice","console","log","setAnswers","isEmpty","isCorrect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","defaultValue","_c","$RefreshReg$"],"sources":["/Users/jyrikonttinen/Documents/github/answer-responses/src/TaskBox.tsx"],"sourcesContent":["import React from 'react'\nimport Select from './Select.tsx';\nimport Result from './Result.tsx';\nimport texts from \"./texts.tsx\";\nimport getCorrectAnswers from './getCorrectAnswers.tsx';\n\ninterface Text {\n    text: string;\n    answer: string;\n};\n\n// Create options for select\nconst options: string[] = [];\ntexts.forEach((object: Text) => !options.includes(object.answer) && options.push(object.answer));\n\nconst TaskBox = (props: any) => {\n    const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        const value = event.target.value;\n        const index = Number(event.target.id);\n        const copy = props.answers;\n        copy.splice(index, 1, value);\n        console.log(copy);\n        props.setAnswers(copy);\n    };\n    const isEmpty: boolean = false;\n    const isCorrect: boolean = false; \n    return <div className=\"task-box-container\">\n        <h2>{props.index + 1}</h2>\n        <p>{props.children}</p>\n        <Select id={props.index} options={options} onChange={handleChange} defaultValue=\"default\" />\n        <Result isEmpty={isEmpty} isCorrect={isCorrect} />\n    </div>\n}\n\nexport default TaskBox;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM/B;;AAED;AACA,MAAMC,OAAiB,GAAG,EAAE;AAC5BH,KAAK,CAACI,OAAO,CAAEC,MAAY,IAAK,CAACF,OAAO,CAACG,QAAQ,CAACD,MAAM,CAACE,MAAM,CAAC,IAAIJ,OAAO,CAACK,IAAI,CAACH,MAAM,CAACE,MAAM,CAAC,CAAC;AAEhG,MAAME,OAAO,GAAIC,KAAU,IAAK;EAC5B,MAAMC,YAAY,GAAIC,KAA2C,IAAK;IAClE,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChC,MAAME,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACE,MAAM,CAACG,EAAE,CAAC;IACrC,MAAMC,IAAI,GAAGR,KAAK,CAACS,OAAO;IAC1BD,IAAI,CAACE,MAAM,CAACL,KAAK,EAAE,CAAC,EAAEF,KAAK,CAAC;IAC5BQ,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACjBR,KAAK,CAACa,UAAU,CAACL,IAAI,CAAC;EAC1B,CAAC;EACD,MAAMM,OAAgB,GAAG,KAAK;EAC9B,MAAMC,SAAkB,GAAG,KAAK;EAChC,oBAAOvB,OAAA;IAAKwB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACtCzB,OAAA;MAAAyB,QAAA,EAAKjB,KAAK,CAACK,KAAK,GAAG;IAAC;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1B7B,OAAA;MAAAyB,QAAA,EAAIjB,KAAK,CAACiB;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB7B,OAAA,CAACJ,MAAM;MAACmB,EAAE,EAAEP,KAAK,CAACK,KAAM;MAACZ,OAAO,EAAEA,OAAQ;MAAC6B,QAAQ,EAAErB,YAAa;MAACsB,YAAY,EAAC;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5F7B,OAAA,CAACH,MAAM;MAACyB,OAAO,EAAEA,OAAQ;MAACC,SAAS,EAAEA;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AACV,CAAC;AAAAG,EAAA,GAjBKzB,OAAO;AAmBb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}