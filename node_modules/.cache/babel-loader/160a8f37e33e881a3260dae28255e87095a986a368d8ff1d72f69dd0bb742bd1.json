{"ast":null,"code":"var _jsxFileName = \"/Users/jyrikonttinen/Documents/github/answer-responses/src/Select.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Select = props => {\n  const notSelectedOptions = [];\n  const alreadySelectedOptions = [];\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: \"Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: props.id,\n      id: props.id,\n      onChange: props.onChange,\n      defaultValue: props.defaultValue,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"default\",\n        disabled: true,\n        children: \"- Select -\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), props.options.map((element, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: element\n      }, `options ${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 72\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = Select;\nexport default Select;\n\n/*                 <optgroup label=\"Already selected\">\n                    <option>None</option>\n                </optgroup>\n\n                */\nvar _c;\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Select","props","notSelectedOptions","alreadySelectedOptions","children","htmlFor","id","fileName","_jsxFileName","lineNumber","columnNumber","name","onChange","defaultValue","value","disabled","options","map","element","index","_c","$RefreshReg$"],"sources":["/Users/jyrikonttinen/Documents/github/answer-responses/src/Select.tsx"],"sourcesContent":["import React from 'react'\n\nconst Select = (props: any) => {\n    const notSelectedOptions: string[] = [];\n    const alreadySelectedOptions: string[] = []; \n\n    return (\n        <fieldset>\n            <label htmlFor={props.id}>Answer</label>\n            <select\n            name={props.id}\n            id={props.id}\n            onChange={props.onChange}\n            defaultValue={props.defaultValue}\n            >\n                <option value=\"default\" disabled>\n                - Select -\n                </option>\n                {props.options.map((element: string, index: number) => <option key={`options ${index}`}>{element}</option>)}\n            </select>\n        </fieldset>\n    )\n}\n\nexport default Select;\n\n/*                 <optgroup label=\"Already selected\">\n                    <option>None</option>\n                </optgroup>\n\n                */"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,MAAM,GAAIC,KAAU,IAAK;EAC3B,MAAMC,kBAA4B,GAAG,EAAE;EACvC,MAAMC,sBAAgC,GAAG,EAAE;EAE3C,oBACIJ,OAAA;IAAAK,QAAA,gBACIL,OAAA;MAAOM,OAAO,EAAEJ,KAAK,CAACK,EAAG;MAAAF,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxCX,OAAA;MACAY,IAAI,EAAEV,KAAK,CAACK,EAAG;MACfA,EAAE,EAAEL,KAAK,CAACK,EAAG;MACbM,QAAQ,EAAEX,KAAK,CAACW,QAAS;MACzBC,YAAY,EAAEZ,KAAK,CAACY,YAAa;MAAAT,QAAA,gBAE7BL,OAAA;QAAQe,KAAK,EAAC,SAAS;QAACC,QAAQ;QAAAX,QAAA,EAAC;MAEjC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRT,KAAK,CAACe,OAAO,CAACC,GAAG,CAAC,CAACC,OAAe,EAAEC,KAAa,kBAAKpB,OAAA;QAAAK,QAAA,EAAkCc;MAAO,GAA3B,WAAUC,KAAM,EAAC;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEnB,CAAC;AAAAU,EAAA,GApBKpB,MAAM;AAsBZ,eAAeA,MAAM;;AAErB;AACA;AACA;AACA;AACA;AAJA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}