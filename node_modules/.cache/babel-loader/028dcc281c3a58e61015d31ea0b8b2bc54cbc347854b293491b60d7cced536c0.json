{"ast":null,"code":"var _jsxFileName = \"/Users/jyrikonttinen/Documents/github/answer-responses/src/Select.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Select = props => {\n  const notSelectedOptions = props.options.filter(element => !props.selection.includes(element));\n  const alreadySelectedOptions = props.options.filter(element => props.selection.includes(element));\n  const currentValue = props.selection[props.id] || \"default\";\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: \"Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: props.id,\n      id: props.id,\n      value: currentValue,\n      onChange: props.onChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"default\",\n        disabled: true,\n        children: \"- Select -\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n        label: \"Not selected yet\",\n        children: notSelectedOptions.length > 0 && notSelectedOptions.map((element, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: element,\n          children: element\n        }, `selectedOptions ${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 114\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n        label: \"Already selected\",\n        children: alreadySelectedOptions.length !== 0 && alreadySelectedOptions.map((element, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: element,\n          children: element\n        }, `notSelectedOptions ${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 124\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = Select;\nexport default Select;\nvar _c;\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Select","props","notSelectedOptions","options","filter","element","selection","includes","alreadySelectedOptions","currentValue","id","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","value","onChange","disabled","label","length","map","index","_c","$RefreshReg$"],"sources":["/Users/jyrikonttinen/Documents/github/answer-responses/src/Select.tsx"],"sourcesContent":["import React from 'react'\n\nconst Select = (props: any) => {\n    const notSelectedOptions: string[] = props.options.filter((element: string) => !props.selection.includes(element));\n    const alreadySelectedOptions: string[] = props.options.filter((element: string) => props.selection.includes(element));\n    const currentValue: string = props.selection[props.id] || \"default\";\n    return (\n        <fieldset>\n            <label htmlFor={props.id}>Answer</label>\n            <select\n            name={props.id}\n            id={props.id}\n            value={currentValue}\n            onChange={props.onChange}\n          >\n                <option value=\"default\" disabled>\n                - Select -\n                </option>\n                <optgroup label=\"Not selected yet\">\n                    {notSelectedOptions.length > 0 && notSelectedOptions.map((element: string, index: number) => <option value={element} key={`selectedOptions ${index}`}>{element}</option>)}\n                </optgroup>\n                <optgroup label=\"Already selected\">\n                    {alreadySelectedOptions.length !== 0 && alreadySelectedOptions.map((element: string, index: number) => <option value={element} key={`notSelectedOptions ${index}`}>{element}</option>)}\n                </optgroup>\n            </select>\n        </fieldset>\n    )\n}\n\nexport default Select;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,MAAM,GAAIC,KAAU,IAAK;EAC3B,MAAMC,kBAA4B,GAAGD,KAAK,CAACE,OAAO,CAACC,MAAM,CAAEC,OAAe,IAAK,CAACJ,KAAK,CAACK,SAAS,CAACC,QAAQ,CAACF,OAAO,CAAC,CAAC;EAClH,MAAMG,sBAAgC,GAAGP,KAAK,CAACE,OAAO,CAACC,MAAM,CAAEC,OAAe,IAAKJ,KAAK,CAACK,SAAS,CAACC,QAAQ,CAACF,OAAO,CAAC,CAAC;EACrH,MAAMI,YAAoB,GAAGR,KAAK,CAACK,SAAS,CAACL,KAAK,CAACS,EAAE,CAAC,IAAI,SAAS;EACnE,oBACIX,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAOa,OAAO,EAAEX,KAAK,CAACS,EAAG;MAAAC,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxCjB,OAAA;MACAkB,IAAI,EAAEhB,KAAK,CAACS,EAAG;MACfA,EAAE,EAAET,KAAK,CAACS,EAAG;MACbQ,KAAK,EAAET,YAAa;MACpBU,QAAQ,EAAElB,KAAK,CAACkB,QAAS;MAAAR,QAAA,gBAErBZ,OAAA;QAAQmB,KAAK,EAAC,SAAS;QAACE,QAAQ;QAAAT,QAAA,EAAC;MAEjC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjB,OAAA;QAAUsB,KAAK,EAAC,kBAAkB;QAAAV,QAAA,EAC7BT,kBAAkB,CAACoB,MAAM,GAAG,CAAC,IAAIpB,kBAAkB,CAACqB,GAAG,CAAC,CAAClB,OAAe,EAAEmB,KAAa,kBAAKzB,OAAA;UAAQmB,KAAK,EAAEb,OAAQ;UAAAM,QAAA,EAAmCN;QAAO,GAAnC,mBAAkBmB,KAAM,EAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnK,CAAC,eACXjB,OAAA;QAAUsB,KAAK,EAAC,kBAAkB;QAAAV,QAAA,EAC7BH,sBAAsB,CAACc,MAAM,KAAK,CAAC,IAAId,sBAAsB,CAACe,GAAG,CAAC,CAAClB,OAAe,EAAEmB,KAAa,kBAAKzB,OAAA;UAAQmB,KAAK,EAAEb,OAAQ;UAAAM,QAAA,EAAsCN;QAAO,GAAtC,sBAAqBmB,KAAM,EAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEnB,CAAC;AAAAS,EAAA,GAzBKzB,MAAM;AA2BZ,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}