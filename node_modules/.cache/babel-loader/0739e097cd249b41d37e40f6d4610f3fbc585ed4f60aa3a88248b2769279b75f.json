{"ast":null,"code":"var _jsxFileName = \"/Users/jyrikonttinen/Documents/github/answer-responses/src/TaskBox.tsx\";\nimport React from 'react';\nimport Select from './Select.tsx';\nimport Result from './Result.tsx';\nimport texts from \"./texts.tsx\";\nimport getCorrectAnswers from './getCorrectAnswers.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n;\n\n// Create options for select\nconst options = [];\ntexts.forEach(object => !options.includes(object.answer) && options.push(object.answer));\nconst TaskBox = props => {\n  const handleChange = event => {\n    // Get value, index and copy state\n    const value = event.target.value;\n    const index = Number(event.target.id);\n    const copy = [...props.selection];\n\n    // Remove other selection with same value\n    if (props.selection.includes(value)) {\n      const index = props.selection.indexOf(value);\n      copy.splice(index, 1, undefined);\n    }\n\n    // Place new value to selection\n    copy.splice(index, 1, value);\n    props.setSelection(copy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-box-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      id: props.index,\n      options: options,\n      selection: props.selection,\n      onChange: handleChange,\n      defaultValue: \"default\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Result, {\n      index: props.index,\n      selection: props.selection,\n      correctAnswerIds: getCorrectAnswers(props.selection)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n};\n_c = TaskBox;\nexport default TaskBox;\nvar _c;\n$RefreshReg$(_c, \"TaskBox\");","map":{"version":3,"names":["React","Select","Result","texts","getCorrectAnswers","jsxDEV","_jsxDEV","options","forEach","object","includes","answer","push","TaskBox","props","handleChange","event","value","target","index","Number","id","copy","selection","indexOf","splice","undefined","setSelection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","defaultValue","correctAnswerIds","_c","$RefreshReg$"],"sources":["/Users/jyrikonttinen/Documents/github/answer-responses/src/TaskBox.tsx"],"sourcesContent":["import React from 'react'\nimport Select from './Select.tsx';\nimport Result from './Result.tsx';\nimport texts from \"./texts.tsx\";\nimport getCorrectAnswers from './getCorrectAnswers.tsx';\n\ninterface Props {\n    index: number;\n    children: string;\n    selection: string[];\n    setSelection: React.Dispatch<React.SetStateAction<string[]>>;\n};\n\ninterface Text {\n    text: string;\n    answer: string;\n};\n\n// Create options for select\nconst options: string[] = [];\ntexts.forEach((object: Text) => !options.includes(object.answer) && options.push(object.answer));\n\nconst TaskBox = (props: Props) => {\n    const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n\n        // Get value, index and copy state\n        const value: string = event.target.value;\n        const index: number = Number(event.target.id);\n        const copy: string[] = [...props.selection];\n\n        // Remove other selection with same value\n        if (props.selection.includes(value)) {\n            const index: number = props.selection.indexOf(value);\n            copy.splice(index, 1, undefined);\n        }\n\n        // Place new value to selection\n        copy.splice(index, 1, value);\n        props.setSelection(copy);\n\n\n    };\n    return <div className=\"task-box-container\">\n        <h2>{props.index + 1}</h2>\n        <p>{props.children}</p>\n        <Select id={props.index} options={options} selection={props.selection} onChange={handleChange} defaultValue=\"default\" />\n        <Result index={props.index} selection={props.selection} correctAnswerIds={getCorrectAnswers(props.selection)} />\n    </div>\n}\n\nexport default TaskBox;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,iBAAiB,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvD;AAKA;;AAED;AACA,MAAMC,OAAiB,GAAG,EAAE;AAC5BJ,KAAK,CAACK,OAAO,CAAEC,MAAY,IAAK,CAACF,OAAO,CAACG,QAAQ,CAACD,MAAM,CAACE,MAAM,CAAC,IAAIJ,OAAO,CAACK,IAAI,CAACH,MAAM,CAACE,MAAM,CAAC,CAAC;AAEhG,MAAME,OAAO,GAAIC,KAAY,IAAK;EAC9B,MAAMC,YAAY,GAAIC,KAA2C,IAAK;IAElE;IACA,MAAMC,KAAa,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IACxC,MAAME,KAAa,GAAGC,MAAM,CAACJ,KAAK,CAACE,MAAM,CAACG,EAAE,CAAC;IAC7C,MAAMC,IAAc,GAAG,CAAC,GAAGR,KAAK,CAACS,SAAS,CAAC;;IAE3C;IACA,IAAIT,KAAK,CAACS,SAAS,CAACb,QAAQ,CAACO,KAAK,CAAC,EAAE;MACjC,MAAME,KAAa,GAAGL,KAAK,CAACS,SAAS,CAACC,OAAO,CAACP,KAAK,CAAC;MACpDK,IAAI,CAACG,MAAM,CAACN,KAAK,EAAE,CAAC,EAAEO,SAAS,CAAC;IACpC;;IAEA;IACAJ,IAAI,CAACG,MAAM,CAACN,KAAK,EAAE,CAAC,EAAEF,KAAK,CAAC;IAC5BH,KAAK,CAACa,YAAY,CAACL,IAAI,CAAC;EAG5B,CAAC;EACD,oBAAOhB,OAAA;IAAKsB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACtCvB,OAAA;MAAAuB,QAAA,EAAKf,KAAK,CAACK,KAAK,GAAG;IAAC;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1B3B,OAAA;MAAAuB,QAAA,EAAIf,KAAK,CAACe;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB3B,OAAA,CAACL,MAAM;MAACoB,EAAE,EAAEP,KAAK,CAACK,KAAM;MAACZ,OAAO,EAAEA,OAAQ;MAACgB,SAAS,EAAET,KAAK,CAACS,SAAU;MAACW,QAAQ,EAAEnB,YAAa;MAACoB,YAAY,EAAC;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxH3B,OAAA,CAACJ,MAAM;MAACiB,KAAK,EAAEL,KAAK,CAACK,KAAM;MAACI,SAAS,EAAET,KAAK,CAACS,SAAU;MAACa,gBAAgB,EAAEhC,iBAAiB,CAACU,KAAK,CAACS,SAAS;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/G,CAAC;AACV,CAAC;AAAAI,EAAA,GA1BKxB,OAAO;AA4Bb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}