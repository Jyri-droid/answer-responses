{"ast":null,"code":"var _jsxFileName = \"/Users/jyrikonttinen/Documents/github/answer-responses/src/Select.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Select = props => {\n  const notSelectedOptions = props.options.filter(element => !props.selection.includes(element));\n  const alreadySelectedOptions = props.options.filter(element => props.selection.includes(element));\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: \"Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: props.id,\n      id: props.id,\n      onChange: props.onChange,\n      defaultValue: props.defaultValue,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"default\",\n        disabled: true,\n        children: \"- Select -\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n        label: \"Not selected yet\",\n        children: notSelectedOptions.map((element, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: element\n        }, `selectedOptions ${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 81\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n        label: \"Already selected\",\n        children: alreadySelectedOptions.map((element, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: element\n        }, `selectedOptions ${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 85\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = Select;\nexport default Select;\n\n/*                 <optgroup label=\"Already selected\">\n                    <option>None</option>\n                </optgroup>\n\n                */\nvar _c;\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Select","props","notSelectedOptions","options","filter","element","selection","includes","alreadySelectedOptions","children","htmlFor","id","fileName","_jsxFileName","lineNumber","columnNumber","name","onChange","defaultValue","value","disabled","label","map","index","_c","$RefreshReg$"],"sources":["/Users/jyrikonttinen/Documents/github/answer-responses/src/Select.tsx"],"sourcesContent":["import React from 'react'\n\nconst Select = (props: any) => {\n    const notSelectedOptions: string[] = props.options.filter((element: string) => !props.selection.includes(element));\n    const alreadySelectedOptions: string[] = props.options.filter((element: string) => props.selection.includes(element));\n    return (\n        <fieldset>\n            <label htmlFor={props.id}>Answer</label>\n            <select\n            name={props.id}\n            id={props.id}\n            onChange={props.onChange}\n            defaultValue={props.defaultValue}\n            >\n                <option value=\"default\" disabled>\n                - Select -\n                </option>\n                <optgroup label=\"Not selected yet\">\n                    {notSelectedOptions.map((element: string, index: number) => <option key={`selectedOptions ${index}`}>{element}</option>)}\n                </optgroup>\n                <optgroup label=\"Already selected\">\n                    {alreadySelectedOptions.map((element: string, index: number) => <option key={`selectedOptions ${index}`}>{element}</option>)}\n                </optgroup>\n            </select>\n        </fieldset>\n    )\n}\n\nexport default Select;\n\n/*                 <optgroup label=\"Already selected\">\n                    <option>None</option>\n                </optgroup>\n\n                */"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,MAAM,GAAIC,KAAU,IAAK;EAC3B,MAAMC,kBAA4B,GAAGD,KAAK,CAACE,OAAO,CAACC,MAAM,CAAEC,OAAe,IAAK,CAACJ,KAAK,CAACK,SAAS,CAACC,QAAQ,CAACF,OAAO,CAAC,CAAC;EAClH,MAAMG,sBAAgC,GAAGP,KAAK,CAACE,OAAO,CAACC,MAAM,CAAEC,OAAe,IAAKJ,KAAK,CAACK,SAAS,CAACC,QAAQ,CAACF,OAAO,CAAC,CAAC;EACrH,oBACIN,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAOW,OAAO,EAAET,KAAK,CAACU,EAAG;MAAAF,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxChB,OAAA;MACAiB,IAAI,EAAEf,KAAK,CAACU,EAAG;MACfA,EAAE,EAAEV,KAAK,CAACU,EAAG;MACbM,QAAQ,EAAEhB,KAAK,CAACgB,QAAS;MACzBC,YAAY,EAAEjB,KAAK,CAACiB,YAAa;MAAAT,QAAA,gBAE7BV,OAAA;QAAQoB,KAAK,EAAC,SAAS;QAACC,QAAQ;QAAAX,QAAA,EAAC;MAEjC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThB,OAAA;QAAUsB,KAAK,EAAC,kBAAkB;QAAAZ,QAAA,EAC7BP,kBAAkB,CAACoB,GAAG,CAAC,CAACjB,OAAe,EAAEkB,KAAa,kBAAKxB,OAAA;UAAAU,QAAA,EAA0CJ;QAAO,GAAnC,mBAAkBkB,KAAM,EAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClH,CAAC,eACXhB,OAAA;QAAUsB,KAAK,EAAC,kBAAkB;QAAAZ,QAAA,EAC7BD,sBAAsB,CAACc,GAAG,CAAC,CAACjB,OAAe,EAAEkB,KAAa,kBAAKxB,OAAA;UAAAU,QAAA,EAA0CJ;QAAO,GAAnC,mBAAkBkB,KAAM,EAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEnB,CAAC;AAAAS,EAAA,GAxBKxB,MAAM;AA0BZ,eAAeA,MAAM;;AAErB;AACA;AACA;AACA;AACA;AAJA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}