{"ast":null,"code":"var _jsxFileName = \"/Users/jyrikonttinen/Documents/github/answer-responses/src/TaskBox.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from \"react\";\nimport Select from './Select.tsx';\nimport Result from './Result.tsx';\nimport texts from \"./texts.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst options = [];\ntexts.forEach(object => !options.includes(object.answer) && options.push(object.answer));\nconst TaskBox = props => {\n  _s();\n  const [isEmpty, setIsEmpty] = useState(true);\n  const handleChange = event => {\n    // Get correct answer\n    const thisId = Number(event.target.id);\n    const thisObject = texts.find(object => object.id === thisId);\n    const correctAnswer = thisObject === null || thisObject === void 0 ? void 0 : thisObject.answer;\n    // Compare selected value to correct answer\n    const selectValue = event.target.value;\n    if (selectValue === correctAnswer) {\n      props.setCorrectAnswers([...props.correctAnswers, thisId]);\n    } else {\n      const thisExcluded = props.correctAnswers.filter(element => element !== thisId);\n      props.setCorrectAnswers(thisExcluded);\n    }\n    // Set not empty\n    setIsEmpty(false);\n    // Add to all selections\n    setSelected(selectValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-box-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      id: props.id,\n      options: options,\n      onChange: handleChange,\n      defaultValue: \"default\",\n      selected: selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Result, {\n      id: props.id,\n      correctAnswers: props.correctAnswers,\n      isEmpty: isEmpty\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n};\n_s(TaskBox, \"IU0w7+oSm/i/b6sfovkRFMI4WJc=\");\n_c = TaskBox;\nexport default TaskBox;\nvar _c;\n$RefreshReg$(_c, \"TaskBox\");","map":{"version":3,"names":["React","useState","Select","Result","texts","jsxDEV","_jsxDEV","options","forEach","object","includes","answer","push","TaskBox","props","_s","isEmpty","setIsEmpty","handleChange","event","thisId","Number","target","id","thisObject","find","correctAnswer","selectValue","value","setCorrectAnswers","correctAnswers","thisExcluded","filter","element","setSelected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","defaultValue","selected","_c","$RefreshReg$"],"sources":["/Users/jyrikonttinen/Documents/github/answer-responses/src/TaskBox.tsx"],"sourcesContent":["import React from 'react'\nimport { useState } from \"react\";\nimport Select from './Select.tsx';\nimport Result from './Result.tsx';\nimport texts from \"./texts.tsx\";\n\ninterface Text {\n    id: number;\n    text: string;\n    answer: string;\n};\n\nconst options: string[] = [];\ntexts.forEach((object) => !options.includes(object.answer) && options.push(object.answer));\n\nconst TaskBox = (props: any) => {\n    const [isEmpty, setIsEmpty] = useState(true);\n    const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        // Get correct answer\n        const thisId = Number(event.target.id);\n        const thisObject: Text | undefined = texts.find((object) => object.id === thisId);\n        const correctAnswer = thisObject?.answer;\n        // Compare selected value to correct answer\n        const selectValue = event.target.value;\n        if (selectValue === correctAnswer) {\n            props.setCorrectAnswers([...props.correctAnswers, thisId]);\n        } else {\n            const thisExcluded = props.correctAnswers.filter((element: number) => element !== thisId);\n            props.setCorrectAnswers(thisExcluded);\n        }\n        // Set not empty\n        setIsEmpty(false);\n        // Add to all selections\n        setSelected(selectValue);\n    };\n    return <div className=\"task-box-container\">\n        <h2>{props.id}</h2>\n        <p>{props.children}</p>\n        <Select id={props.id} options={options} onChange={handleChange} defaultValue=\"default\" selected={selected} />\n        <Result id={props.id} correctAnswers={props.correctAnswers} isEmpty={isEmpty} />\n    </div>\n}\n\nexport default TaskBox;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM/B;AAED,MAAMC,OAAiB,GAAG,EAAE;AAC5BH,KAAK,CAACI,OAAO,CAAEC,MAAM,IAAK,CAACF,OAAO,CAACG,QAAQ,CAACD,MAAM,CAACE,MAAM,CAAC,IAAIJ,OAAO,CAACK,IAAI,CAACH,MAAM,CAACE,MAAM,CAAC,CAAC;AAE1F,MAAME,OAAO,GAAIC,KAAU,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMiB,YAAY,GAAIC,KAA2C,IAAK;IAClE;IACA,MAAMC,MAAM,GAAGC,MAAM,CAACF,KAAK,CAACG,MAAM,CAACC,EAAE,CAAC;IACtC,MAAMC,UAA4B,GAAGpB,KAAK,CAACqB,IAAI,CAAEhB,MAAM,IAAKA,MAAM,CAACc,EAAE,KAAKH,MAAM,CAAC;IACjF,MAAMM,aAAa,GAAGF,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEb,MAAM;IACxC;IACA,MAAMgB,WAAW,GAAGR,KAAK,CAACG,MAAM,CAACM,KAAK;IACtC,IAAID,WAAW,KAAKD,aAAa,EAAE;MAC/BZ,KAAK,CAACe,iBAAiB,CAAC,CAAC,GAAGf,KAAK,CAACgB,cAAc,EAAEV,MAAM,CAAC,CAAC;IAC9D,CAAC,MAAM;MACH,MAAMW,YAAY,GAAGjB,KAAK,CAACgB,cAAc,CAACE,MAAM,CAAEC,OAAe,IAAKA,OAAO,KAAKb,MAAM,CAAC;MACzFN,KAAK,CAACe,iBAAiB,CAACE,YAAY,CAAC;IACzC;IACA;IACAd,UAAU,CAAC,KAAK,CAAC;IACjB;IACAiB,WAAW,CAACP,WAAW,CAAC;EAC5B,CAAC;EACD,oBAAOrB,OAAA;IAAK6B,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACtC9B,OAAA;MAAA8B,QAAA,EAAKtB,KAAK,CAACS;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBlC,OAAA;MAAA8B,QAAA,EAAItB,KAAK,CAACsB;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBlC,OAAA,CAACJ,MAAM;MAACqB,EAAE,EAAET,KAAK,CAACS,EAAG;MAAChB,OAAO,EAAEA,OAAQ;MAACkC,QAAQ,EAAEvB,YAAa;MAACwB,YAAY,EAAC,SAAS;MAACC,QAAQ,EAAEA;IAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7GlC,OAAA,CAACH,MAAM;MAACoB,EAAE,EAAET,KAAK,CAACS,EAAG;MAACO,cAAc,EAAEhB,KAAK,CAACgB,cAAe;MAACd,OAAO,EAAEA;IAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/E,CAAC;AACV,CAAC;AAAAzB,EAAA,CA1BKF,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AA4Bb,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}