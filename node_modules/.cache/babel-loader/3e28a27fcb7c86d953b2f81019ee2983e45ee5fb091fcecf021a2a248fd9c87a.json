{"ast":null,"code":"import React from'react';import{useState}from\"react\";import Select from'./Select.tsx';import Result from'./Result.tsx';import texts from\"./texts.tsx\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";;const options=[];texts.forEach(object=>!options.includes(object.answer)&&options.push(object.answer));const TaskBox=props=>{const[isEmpty,setIsEmpty]=useState(true);const handleChange=event=>{// Get correct answer\nconst thisId=Number(event.target.id);const thisObject=texts.find(object=>object.id===thisId);const correctAnswer=thisObject===null||thisObject===void 0?void 0:thisObject.answer;// Compare selected value to correct answer\nconst selectValue=event.target.value;if(selectValue===correctAnswer){props.setCorrectAnswers([...props.correctAnswers,thisId]);}else{const thisExcluded=props.correctAnswers.filter(element=>element!==thisId);props.setCorrectAnswers(thisExcluded);}// Set not empty\nsetIsEmpty(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"task-box-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:props.id}),/*#__PURE__*/_jsx(\"p\",{children:props.children}),/*#__PURE__*/_jsx(Select,{id:props.id,options:options,onChange:handleChange,defaultValue:\"default\"}),/*#__PURE__*/_jsx(Result,{id:props.id,correctAnswers:props.correctAnswers,isEmpty:isEmpty})]});};export default TaskBox;","map":{"version":3,"names":["React","useState","Select","Result","texts","jsx","_jsx","jsxs","_jsxs","options","forEach","object","includes","answer","push","TaskBox","props","isEmpty","setIsEmpty","handleChange","event","thisId","Number","target","id","thisObject","find","correctAnswer","selectValue","value","setCorrectAnswers","correctAnswers","thisExcluded","filter","element","className","children","onChange","defaultValue"],"sources":["/Users/jyrikonttinen/Documents/github/answer-responses/src/TaskBox.tsx"],"sourcesContent":["import React from 'react'\nimport { useState } from \"react\";\nimport Select from './Select.tsx';\nimport Result from './Result.tsx';\nimport texts from \"./texts.tsx\";\n\ninterface Text {\n    id: number;\n    text: string;\n    answer: string;\n};\n\nconst options: string[] = [];\ntexts.forEach((object) => !options.includes(object.answer) && options.push(object.answer));\n\nconst TaskBox = (props: any) => {\n    const [isEmpty, setIsEmpty] = useState(true);\n    const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        // Get correct answer\n        const thisId = Number(event.target.id);\n        const thisObject: Text | undefined = texts.find((object) => object.id === thisId);\n        const correctAnswer = thisObject?.answer;\n        // Compare selected value to correct answer\n        const selectValue = event.target.value;\n        if (selectValue === correctAnswer) {\n            props.setCorrectAnswers([...props.correctAnswers, thisId]);\n        } else {\n            const thisExcluded = props.correctAnswers.filter((element: number) => element !== thisId);\n            props.setCorrectAnswers(thisExcluded);\n        }\n        // Set not empty\n        setIsEmpty(false);\n    };\n    return <div className=\"task-box-container\">\n        <h2>{props.id}</h2>\n        <p>{props.children}</p>\n        <Select id={props.id} options={options} onChange={handleChange} defaultValue=\"default\" />\n        <Result id={props.id} correctAnswers={props.correctAnswers} isEmpty={isEmpty} />\n    </div>\n}\n\nexport default TaskBox;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,MAAM,KAAM,cAAc,CACjC,MAAO,CAAAC,MAAM,KAAM,cAAc,CACjC,MAAO,CAAAC,KAAK,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAM/B,CAED,KAAM,CAAAC,OAAiB,CAAG,EAAE,CAC5BL,KAAK,CAACM,OAAO,CAAEC,MAAM,EAAK,CAACF,OAAO,CAACG,QAAQ,CAACD,MAAM,CAACE,MAAM,CAAC,EAAIJ,OAAO,CAACK,IAAI,CAACH,MAAM,CAACE,MAAM,CAAC,CAAC,CAE1F,KAAM,CAAAE,OAAO,CAAIC,KAAU,EAAK,CAC5B,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAAkB,YAAY,CAAIC,KAA2C,EAAK,CAClE;AACA,KAAM,CAAAC,MAAM,CAAGC,MAAM,CAACF,KAAK,CAACG,MAAM,CAACC,EAAE,CAAC,CACtC,KAAM,CAAAC,UAA4B,CAAGrB,KAAK,CAACsB,IAAI,CAAEf,MAAM,EAAKA,MAAM,CAACa,EAAE,GAAKH,MAAM,CAAC,CACjF,KAAM,CAAAM,aAAa,CAAGF,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAEZ,MAAM,CACxC;AACA,KAAM,CAAAe,WAAW,CAAGR,KAAK,CAACG,MAAM,CAACM,KAAK,CACtC,GAAID,WAAW,GAAKD,aAAa,CAAE,CAC/BX,KAAK,CAACc,iBAAiB,CAAC,CAAC,GAAGd,KAAK,CAACe,cAAc,CAAEV,MAAM,CAAC,CAAC,CAC9D,CAAC,IAAM,CACH,KAAM,CAAAW,YAAY,CAAGhB,KAAK,CAACe,cAAc,CAACE,MAAM,CAAEC,OAAe,EAAKA,OAAO,GAAKb,MAAM,CAAC,CACzFL,KAAK,CAACc,iBAAiB,CAACE,YAAY,CAAC,CACzC,CACA;AACAd,UAAU,CAAC,KAAK,CAAC,CACrB,CAAC,CACD,mBAAOV,KAAA,QAAK2B,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACtC9B,IAAA,OAAA8B,QAAA,CAAKpB,KAAK,CAACQ,EAAE,CAAK,CAAC,cACnBlB,IAAA,MAAA8B,QAAA,CAAIpB,KAAK,CAACoB,QAAQ,CAAI,CAAC,cACvB9B,IAAA,CAACJ,MAAM,EAACsB,EAAE,CAAER,KAAK,CAACQ,EAAG,CAACf,OAAO,CAAEA,OAAQ,CAAC4B,QAAQ,CAAElB,YAAa,CAACmB,YAAY,CAAC,SAAS,CAAE,CAAC,cACzFhC,IAAA,CAACH,MAAM,EAACqB,EAAE,CAAER,KAAK,CAACQ,EAAG,CAACO,cAAc,CAAEf,KAAK,CAACe,cAAe,CAACd,OAAO,CAAEA,OAAQ,CAAE,CAAC,EAC/E,CAAC,CACV,CAAC,CAED,cAAe,CAAAF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}