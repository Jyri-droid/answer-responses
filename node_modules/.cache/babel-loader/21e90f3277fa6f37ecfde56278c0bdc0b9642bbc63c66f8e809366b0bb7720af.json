{"ast":null,"code":"var _jsxFileName = \"/Users/jyrikonttinen/Documents/github/answer-responses/src/TaskBox.tsx\";\nimport React from 'react';\nimport Select from './Select.tsx';\nimport Result from './Result.tsx';\nimport texts from \"./texts.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst options = [];\ntexts.forEach(object => !options.includes(object.answer) && options.push(object.answer));\nconst TaskBox = props => {\n  const handleChange = event => {\n    // Get correct answer\n    const thisId = Number(event.target.id);\n    const thisObject = texts.find(object => object.id === thisId);\n    const correctAnswer = thisObject === null || thisObject === void 0 ? void 0 : thisObject.answer;\n    // Compare selected value to correct answer\n    const selectValue = event.target.value;\n    if (selectValue === correctAnswer) {\n      props.setCorrectAnswers([...props.correctAnswers, thisId]);\n    } else {\n      const thisExcluded = props.correctAnswers.filter(element => element !== thisId);\n      props.setCorrectAnswers(thisExcluded);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-box-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      id: props.index,\n      options: options,\n      onChange: handleChange,\n      defaultValue: \"default\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Result, {\n      id: props.index,\n      correctAnswers: props.answers,\n      isEmpty: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n};\n_c = TaskBox;\nexport default TaskBox;\nvar _c;\n$RefreshReg$(_c, \"TaskBox\");","map":{"version":3,"names":["React","Select","Result","texts","jsxDEV","_jsxDEV","options","forEach","object","includes","answer","push","TaskBox","props","handleChange","event","thisId","Number","target","id","thisObject","find","correctAnswer","selectValue","value","setCorrectAnswers","correctAnswers","thisExcluded","filter","element","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","onChange","defaultValue","answers","isEmpty","_c","$RefreshReg$"],"sources":["/Users/jyrikonttinen/Documents/github/answer-responses/src/TaskBox.tsx"],"sourcesContent":["import React from 'react'\nimport { useState } from \"react\";\nimport Select from './Select.tsx';\nimport Result from './Result.tsx';\nimport texts from \"./texts.tsx\";\n\ninterface Text {\n    text: string;\n    answer: string;\n};\n\nconst options: string[] = [];\ntexts.forEach((object) => !options.includes(object.answer) && options.push(object.answer));\n\nconst TaskBox = (props: any) => {\n    const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        // Get correct answer\n        const thisId = Number(event.target.id);\n        const thisObject: Text | undefined = texts.find((object) => object.id === thisId);\n        const correctAnswer = thisObject?.answer;\n        // Compare selected value to correct answer\n        const selectValue = event.target.value;\n        if (selectValue === correctAnswer) {\n            props.setCorrectAnswers([...props.correctAnswers, thisId]);\n        } else {\n            const thisExcluded = props.correctAnswers.filter((element: number) => element !== thisId);\n            props.setCorrectAnswers(thisExcluded);\n        }\n\n    };\n    return <div className=\"task-box-container\">\n        <h2>{props.index + 1}</h2>\n        <p>{props.children}</p>\n        <Select id={props.index} options={options} onChange={handleChange} defaultValue=\"default\" />\n        <Result id={props.index} correctAnswers={props.answers} isEmpty={true} />\n    </div>\n}\n\nexport default TaskBox;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK/B;AAED,MAAMC,OAAiB,GAAG,EAAE;AAC5BH,KAAK,CAACI,OAAO,CAAEC,MAAM,IAAK,CAACF,OAAO,CAACG,QAAQ,CAACD,MAAM,CAACE,MAAM,CAAC,IAAIJ,OAAO,CAACK,IAAI,CAACH,MAAM,CAACE,MAAM,CAAC,CAAC;AAE1F,MAAME,OAAO,GAAIC,KAAU,IAAK;EAC5B,MAAMC,YAAY,GAAIC,KAA2C,IAAK;IAClE;IACA,MAAMC,MAAM,GAAGC,MAAM,CAACF,KAAK,CAACG,MAAM,CAACC,EAAE,CAAC;IACtC,MAAMC,UAA4B,GAAGjB,KAAK,CAACkB,IAAI,CAAEb,MAAM,IAAKA,MAAM,CAACW,EAAE,KAAKH,MAAM,CAAC;IACjF,MAAMM,aAAa,GAAGF,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEV,MAAM;IACxC;IACA,MAAMa,WAAW,GAAGR,KAAK,CAACG,MAAM,CAACM,KAAK;IACtC,IAAID,WAAW,KAAKD,aAAa,EAAE;MAC/BT,KAAK,CAACY,iBAAiB,CAAC,CAAC,GAAGZ,KAAK,CAACa,cAAc,EAAEV,MAAM,CAAC,CAAC;IAC9D,CAAC,MAAM;MACH,MAAMW,YAAY,GAAGd,KAAK,CAACa,cAAc,CAACE,MAAM,CAAEC,OAAe,IAAKA,OAAO,KAAKb,MAAM,CAAC;MACzFH,KAAK,CAACY,iBAAiB,CAACE,YAAY,CAAC;IACzC;EAEJ,CAAC;EACD,oBAAOtB,OAAA;IAAKyB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACtC1B,OAAA;MAAA0B,QAAA,EAAKlB,KAAK,CAACmB,KAAK,GAAG;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1B/B,OAAA;MAAA0B,QAAA,EAAIlB,KAAK,CAACkB;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB/B,OAAA,CAACJ,MAAM;MAACkB,EAAE,EAAEN,KAAK,CAACmB,KAAM;MAAC1B,OAAO,EAAEA,OAAQ;MAAC+B,QAAQ,EAAEvB,YAAa;MAACwB,YAAY,EAAC;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5F/B,OAAA,CAACH,MAAM;MAACiB,EAAE,EAAEN,KAAK,CAACmB,KAAM;MAACN,cAAc,EAAEb,KAAK,CAAC0B,OAAQ;MAACC,OAAO,EAAE;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AACV,CAAC;AAAAK,EAAA,GAtBK7B,OAAO;AAwBb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}